)
server <- function(input, output) {
output$plot <- renderPlot({
plot(advert$Sales ~ advert[,input$ad],
main = 'Sales vs' input$ad)})
}
shinyApp(ui, server)
library(shiny)
advert <- read.csv('Advertising.csv')
ui <- fluidPage(
selectInput(inputId = "ad", label = "Advertisement Type:",
c("TV" = "TV",
"Radio" = "Radio",
"Newspaper" = "Newspaper")),
plotOutput("plot")
)
server <- function(input, output) {
output$plot <- renderPlot({
plot(advert$Sales ~ advert[,input$ad])})
}
shinyApp(ui, server)
library(shiny)
advert <- read.csv('Advertising.csv')
regTV <- lm(Sales ~ TV, data = advert)
ui <- fluidPage(
selectInput(inputId = "ad", label = "Advertisement Type:",
c("TV" = "TV",
"Radio" = "Radio",
"Newspaper" = "Newspaper")),
plotOutput("plot")
)
server <- function(input, output) {
output$plot <- renderPlot({
plot(advert$Sales ~ advert[,input$ad])
abline(a = regTV$coefficients[1], regTV$coefficients[2], col = 'blue')})
}
shinyApp(ui, server)
cat(x, y)
?cat
cat('x', 'y')
cat('x', 'y', sep = '')
x <- cat('reg', input$ad, sep = '')
library(shiny)
advert <- read.csv('Advertising.csv')
regTV <- lm(Sales ~ TV, data = advert)
regRadio <- lm(Sales ~ Radio, data = advert)
regNewspaper <- lm(Sales ~ Newspaper, data = advert)
ui <- fluidPage(
selectInput(inputId = "ad", label = "Advertisement Type:",
c("TV" = "TV",
"Radio" = "Radio",
"Newspaper" = "Newspaper")),
plotOutput("plot")
)
x <- cat('reg', input$ad, sep = '')
server <- function(input, output) {
output$plot <- renderPlot({
x <- cat('reg', input$ad, sep = '')
plot(advert$Sales ~ advert[,input$ad])
abline(a = x$coefficients[1], x$coefficients[2], col = 'blue')})
}
shinyApp(ui, server)
y <- 'yes'
cat('reg', y)
cat('reg', y, sep = '')
library(shiny)
advert <- read.csv('Advertising.csv')
regTV <- lm(Sales ~ TV, data = advert)
regRadio <- lm(Sales ~ Radio, data = advert)
regNewspaper <- lm(Sales ~ Newspaper, data = advert)
ui <- fluidPage(
selectInput(inputId = "ad", label = "Advertisement Type:",
c("TV" = "TV",
"Radio" = "Radio",
"Newspaper" = "Newspaper")),
plotOutput("plot")
)
x <- cat('reg', input$ad, sep = '')
server <- function(input, output) {
output$plot <- renderPlot({
x <- cat('reg', input$ad, sep = '')
plot(advert$Sales ~ advert[,input$ad])
abline(a = x$coefficients[1], x$coefficients[2], col = 'blue')})
}
shinyApp(ui, server)
cat('reg', y, sep = '')
as.string(cat('reg', y, sep = ''))
as.character(cat('reg', y, sep = ''))
library(shiny)
advert <- read.csv('Advertising.csv')
regTV <- lm(Sales ~ TV, data = advert)
regRadio <- lm(Sales ~ Radio, data = advert)
regNewspaper <- lm(Sales ~ Newspaper, data = advert)
ui <- fluidPage(
selectInput(inputId = "ad", label = "Advertisement Type:",
c("TV" = "TV",
"Radio" = "Radio",
"Newspaper" = "Newspaper")),
plotOutput("plot")
)
server <- function(input, output) {
output$plot <- renderPlot({
x <- cat('reg', input$ad, sep = '')
plot(advert$Sales ~ advert[,input$ad])
abline(a = x$coefficients[1], x$coefficients[2], col = 'blue')})
}
shinyApp(ui, server)
library(shiny)
advert <- read.csv('Advertising.csv')
regTV <- lm(Sales ~ TV, data = advert)
regRadio <- lm(Sales ~ Radio, data = advert)
regNewspaper <- lm(Sales ~ Newspaper, data = advert)
ui <- fluidPage(
selectInput(inputId = "ad", label = "Advertisement Type:",
c("TV" = "TV",
"Radio" = "Radio",
"Newspaper" = "Newspaper")),
plotOutput("plot")
)
server <- function(input, output) {
output$plot <- renderPlot({
plot(advert$Sales ~ advert[,input$ad])
abline(a =     cat('reg', input$ad, sep = '')$coefficients[1], x$coefficients[2], col = 'blue')})
}
shinyApp(ui, server)
c(reg,'eys')
c('reg','eys')
?c
regs <- list(regTV, regRadio, regNewspaper)
regs
regs[1]
regs[2]
regs[2]$coefficients
regs[2]
regs[[2]]
regs[[2]]coefficients()
regs[[2]]coefficients
regs[[2]]$coefficients
regs$Radio
regs$1
regs[[Radoi]]
str(regs)
regs$coefficients
library(shiny)
advert <- read.csv('Advertising.csv')
regTV <- lm(Sales ~ TV, data = advert)
regRadio <- lm(Sales ~ Radio, data = advert)
regNewspaper <- lm(Sales ~ Newspaper, data = advert)
regs <- list(regTV, regRadio, regNewspaper)
ui <- fluidPage(
selectInput(inputId = "ad", label = "Advertisement Type:",
c("TV" = "TV",
"Radio" = "Radio",
"Newspaper" = "Newspaper")),
plotOutput("plot")
)
server <- function(input, output) {
output$plot <- renderPlot({
plot(advert$Sales ~ advert[,input$ad])
abline(a = input$ad$coefficients[1], $coefficients[2], col = 'blue')})
}
shinyApp(ui, server)
library(shiny)
advert <- read.csv('Advertising.csv')
regTV <- lm(Sales ~ TV, data = advert)
regRadio <- lm(Sales ~ Radio, data = advert)
regNewspaper <- lm(Sales ~ Newspaper, data = advert)
regs <- list(regTV, regRadio, regNewspaper)
ui <- fluidPage(
selectInput(inputId = "ad", label = "Advertisement Type:",
c("TV" = "TV",
"Radio" = "Radio",
"Newspaper" = "Newspaper")),
plotOutput("plot")
)
server <- function(input, output) {
output$plot <- renderPlot({
plot(advert$Sales ~ advert[,input$ad])
abline(a = (input$ad)$coefficients[1], $coefficients[2], col = 'blue')})
}
shinyApp(ui, server)
library(shiny)
advert <- read.csv('Advertising.csv')
regTV <- lm(Sales ~ TV, data = advert)
regRadio <- lm(Sales ~ Radio, data = advert)
regNewspaper <- lm(Sales ~ Newspaper, data = advert)
regs <- list(regTV, regRadio, regNewspaper)
ui <- fluidPage(
selectInput(inputId = "ad", label = "Advertisement Type:",
c("TV" = "TV",
"Radio" = "Radio",
"Newspaper" = "Newspaper")),
plotOutput("plot")
)
server <- function(input, output) {
output$plot <- renderPlot({
plot(advert$Sales ~ advert[,input$ad])
abline(a = regTV$coefficients[1], regTV$coefficients[2], col = 'blue')})
}
shinyApp(ui, server)
library(shiny)
advert <- read.csv('Advertising.csv')
regTV <- lm(Sales ~ TV, data = advert)
regRadio <- lm(Sales ~ Radio, data = advert)
regNewspaper <- lm(Sales ~ Newspaper, data = advert)
regs <- list(regTV, regRadio, regNewspaper)
ui <- fluidPage(
selectInput(inputId = "ad", label = "Advertisement Type:",
c("TV" = "TV",
"Radio" = "Radio",
"Newspaper" = "Newspaper")),
plotOutput("plot")
)
server <- function(input, output) {
output$plot <- renderPlot({
if(input$ad == 'TV'){
plot(advert$Sales ~ advert[,input$ad])
abline(a = regTV$coefficients[1], regTV$coefficients[2], col = 'blue')})
}
}
shinyApp(ui, server)
library(shiny)
advert <- read.csv('Advertising.csv')
regTV <- lm(Sales ~ TV, data = advert)
regRadio <- lm(Sales ~ Radio, data = advert)
regNewspaper <- lm(Sales ~ Newspaper, data = advert)
regs <- list(regTV, regRadio, regNewspaper)
ui <- fluidPage(
selectInput(inputId = "ad", label = "Advertisement Type:",
c("TV" = "TV",
"Radio" = "Radio",
"Newspaper" = "Newspaper")),
plotOutput("plot")
)
server <- function(input, output) {
output$plot <- renderPlot({
if(input$ad == 'TV'){
plot(advert$Sales ~ advert[,input$ad])
abline(a = regTV$coefficients[1], regTV$coefficients[2], col = 'blue')})
} else if(inpur$ad == 'Radio'){
plot(advert$Sales ~ advert[,input$ad])
abline(a = regRadio$coefficients[1], regRadio$coefficients[2], col = 'blue')})
}
}
shinyApp(ui, server)
library(shiny)
advert <- read.csv('Advertising.csv')
regTV <- lm(Sales ~ TV, data = advert)
regRadio <- lm(Sales ~ Radio, data = advert)
regNewspaper <- lm(Sales ~ Newspaper, data = advert)
regs <- list(regTV, regRadio, regNewspaper)
ui <- fluidPage(
selectInput(inputId = "ad", label = "Advertisement Type:",
c("TV" = "TV",
"Radio" = "Radio",
"Newspaper" = "Newspaper")),
plotOutput("plot")
)
server <- function(input, output) {
output$plot <- renderPlot({
if(input$ad == 'TV'){
plot(advert$Sales ~ advert[,input$ad])
abline(a = regTV$coefficients[1], regTV$coefficients[2], col = 'blue')}
} else if(inpur$ad == 'Radio'){
plot(advert$Sales ~ advert[,input$ad])
abline(a = regRadio$coefficients[1], regRadio$coefficients[2], col = 'blue')})
}
})
shinyApp(ui, server)
library(shiny)
advert <- read.csv('Advertising.csv')
regTV <- lm(Sales ~ TV, data = advert)
regRadio <- lm(Sales ~ Radio, data = advert)
regNewspaper <- lm(Sales ~ Newspaper, data = advert)
regs <- list(regTV, regRadio, regNewspaper)
ui <- fluidPage(
selectInput(inputId = "ad", label = "Advertisement Type:",
c("TV" = "TV",
"Radio" = "Radio",
"Newspaper" = "Newspaper")),
plotOutput("plot")
)
server <- function(input, output) {
output$plot <- renderPlot({
if(input$ad == 'TV'){
plot(advert$Sales ~ advert[,input$ad])
abline(a = regTV$coefficients[1], regTV$coefficients[2], col = 'blue')}
} else if(inpur$ad == 'Radio'){
plot(advert$Sales ~ advert[,input$ad])
abline(a = regRadio$coefficients[1], regRadio$coefficients[2], col = 'blue')}
}
)}
shinyApp(ui, server)
library(shiny)
advert <- read.csv('Advertising.csv')
regTV <- lm(Sales ~ TV, data = advert)
regRadio <- lm(Sales ~ Radio, data = advert)
regNewspaper <- lm(Sales ~ Newspaper, data = advert)
regs <- list(regTV, regRadio, regNewspaper)
ui <- fluidPage(
selectInput(inputId = "ad", label = "Advertisement Type:",
c("TV" = "TV",
"Radio" = "Radio",
"Newspaper" = "Newspaper")),
plotOutput("plot")
)
server <- function(input, output) {
output$plot <- renderPlot({
if(input$ad == 'TV'){
plot(advert$Sales ~ advert[,input$ad])
abline(a = regTV$coefficients[1], regTV$coefficients[2], col = 'blue')}
} else if(inpur$ad == 'Radio'){
plot(advert$Sales ~ advert[,input$ad])
abline(a = regRadio$coefficients[1], regRadio$coefficients[2], col = 'blue')}
)}
shinyApp(ui, server)
library(shiny)
advert <- read.csv('Advertising.csv')
regTV <- lm(Sales ~ TV, data = advert)
regRadio <- lm(Sales ~ Radio, data = advert)
regNewspaper <- lm(Sales ~ Newspaper, data = advert)
regs <- list(regTV, regRadio, regNewspaper)
ui <- fluidPage(
selectInput(inputId = "ad", label = "Advertisement Type:",
c("TV" = "TV",
"Radio" = "Radio",
"Newspaper" = "Newspaper")),
plotOutput("plot")
)
server <- function(input, output) {
output$plot <- renderPlot({
plot(advert$Sales ~ advert[,input$ad])
abline(a = regTV$coefficients[1], regTV$coefficients[2], col = 'blue')}
)}
shinyApp(ui, server)
library(shiny)
advert <- read.csv('Advertising.csv')
regTV <- lm(Sales ~ TV, data = advert)
regRadio <- lm(Sales ~ Radio, data = advert)
regNewspaper <- lm(Sales ~ Newspaper, data = advert)
regs <- list(regTV, regRadio, regNewspaper)
ui <- fluidPage(
selectInput(inputId = "ad", label = "Advertisement Type:",
c("TV" = "TV",
"Radio" = "Radio",
"Newspaper" = "Newspaper")),
plotOutput("plot")
)
server <- function(input, output) {
output$plot <- renderPlot({
if(input$ad == 'TV'){
plot(advert$Sales ~ advert[,input$ad])
abline(a = regTV$coefficients[1], regTV$coefficients[2], col = 'blue')
}
}
)}
shinyApp(ui, server)
library(shiny)
advert <- read.csv('Advertising.csv')
regTV <- lm(Sales ~ TV, data = advert)
regRadio <- lm(Sales ~ Radio, data = advert)
regNewspaper <- lm(Sales ~ Newspaper, data = advert)
regs <- list(regTV, regRadio, regNewspaper)
ui <- fluidPage(
selectInput(inputId = "ad", label = "Advertisement Type:",
c("TV" = "TV",
"Radio" = "Radio",
"Newspaper" = "Newspaper")),
plotOutput("plot")
)
server <- function(input, output) {
output$plot <- renderPlot({
if(input$ad == 'TV'){
plot(advert$Sales ~ advert[,input$ad])
abline(a = regTV$coefficients[1], regTV$coefficients[2], col = 'blue')
} else if(input$ad == 'Radio'){
plot(advert$Sales ~ advert[,input$ad])
abline(a = regRadio$coefficients[1], regRadio$coefficients[2], col = 'blue')
}
}
)}
shinyApp(ui, server)
library(shiny)
advert <- read.csv('Advertising.csv')
regTV <- lm(Sales ~ TV, data = advert)
regRadio <- lm(Sales ~ Radio, data = advert)
regNewspaper <- lm(Sales ~ Newspaper, data = advert)
regs <- list(regTV, regRadio, regNewspaper)
ui <- fluidPage(
selectInput(inputId = "ad", label = "Advertisement Type:",
c("TV" = "TV",
"Radio" = "Radio",
"Newspaper" = "Newspaper")),
plotOutput("plot")
)
server <- function(input, output) {
output$plot <- renderPlot({
if(input$ad == 'TV'){
plot(advert$Sales ~ advert[,input$ad])
abline(a = regTV$coefficients[1], regTV$coefficients[2], col = 'blue')
} else if(input$ad == 'Radio'){
plot(advert$Sales ~ advert[,input$ad])
abline(a = regRadio$coefficients[1], regRadio$coefficients[2], col = 'blue')
} else if(input$ad == 'Newspaper'){
plot(advert$Sales ~ advert[,input$ad])
abline(a = regNewspaper$coefficients[1], regNewspaper$coefficients[2], col = 'blue')
}
}
)}
shinyApp(ui, server)
plot(advert$Radio, advert$Sales,
abline(a = regRadio$coefficients[1], b = regRadio$coefficients[2], col = 'blue'),
main = 'Plot of Radio vs Sales with regression line',
ylab = 'Sales',
xlab = 'Radio',
col = 'red',
pch = 20)
library(shiny)
advert <- read.csv('Advertising.csv')
regTV <- lm(Sales ~ TV, data = advert)
regRadio <- lm(Sales ~ Radio, data = advert)
regNewspaper <- lm(Sales ~ Newspaper, data = advert)
regs <- list(regTV, regRadio, regNewspaper)
ui <- fluidPage(
selectInput(inputId = "ad", label = "Advertisement Type:",
c("TV" = "TV",
"Radio" = "Radio",
"Newspaper" = "Newspaper")),
plotOutput("plot")
)
server <- function(input, output) {
output$plot <- renderPlot({
if(input$ad == 'TV'){
plot(advert$Sales ~ advert[,input$ad])
abline(a = regTV$coefficients[1], regTV$coefficients[2], col = 'blue')
} else if(input$ad == 'Radio'){
plot(advert$Sales ~ advert[,input$ad])
abline(a = regRadio$coefficients[1], regRadio$coefficients[2], col = 'blue')
} else if(input$ad == 'Newspaper'){
plot(advert$Sales ~ advert[,input$ad])
abline(a = regNewspaper$coefficients[1], regNewspaper$coefficients[2], col = 'blue')
}
}
)}
shinyApp(ui, server)
library(shiny)
advert <- read.csv('Advertising.csv')
regTV <- lm(Sales ~ TV, data = advert)
regRadio <- lm(Sales ~ Radio, data = advert)
regNewspaper <- lm(Sales ~ Newspaper, data = advert)
regs <- list(regTV, regRadio, regNewspaper)
ui <- fluidPage(
selectInput(inputId = "ad", label = "Advertisement Type:",
c("TV" = "TV",
"Radio" = "Radio",
"Newspaper" = "Newspaper")),
plotOutput("plot")
)
server <- function(input, output) {
output$plot <- renderPlot({
if(input$ad == 'TV'){
plot(advert$Sales ~ advert[,input$ad])
abline(a = regTV$coefficients[1], regTV$coefficients[2], col = 'blue')
} else if(input$ad == 'Radio'){
plot(advert$Sales ~ advert[,input$ad])
abline(a = regRadio$coefficients[1], regRadio$coefficients[2], col = 'blue')
} else if(input$ad == 'Newspaper'){
plot(advert$Sales ~ advert[,input$ad])
abline(a = regNewspaper$coefficients[1], regNewspaper$coefficients[2], col = 'blue')
}
}
)}
shinyApp(ui, server)
library(shiny)
advert <- read.csv('Advertising.csv')
regTV <- lm(Sales ~ TV, data = advert)
regRadio <- lm(Sales ~ Radio, data = advert)
regNewspaper <- lm(Sales ~ Newspaper, data = advert)
ui <- fluidPage(
selectInput(inputId = "ad", label = "Advertisement Type:",
c("TV" = "TV",
"Radio" = "Radio",
"Newspaper" = "Newspaper")),
plotOutput("plot")
)
server <- function(input, output) {
output$plot <- renderPlot({
if(input$ad == 'TV'){
plot(advert$Sales ~ advert[,input$ad])
abline(a = regTV$coefficients[1], regTV$coefficients[2], col = 'blue')
} else if(input$ad == 'Radio'){
plot(advert$Sales ~ advert[,input$ad])
abline(a = regRadio$coefficients[1], regRadio$coefficients[2], col = 'blue')
} else if(input$ad == 'Newspaper'){
plot(advert$Sales ~ advert[,input$ad])
abline(a = regNewspaper$coefficients[1], regNewspaper$coefficients[2], col = 'blue')
}
}
)}
shinyApp(ui, server)
setwd("C:/Users/manue/Desktop/Stat159/stat159-fall2016-proj02")
credit <- read.csv("data/Credit.csv", row.names = 1, stringsAsFactors = F)
View(credit)
cor(credit[,c(1:6, 11)])
round(cor(credit[,c(1:6, 11)]),4)
plot(credit$Rating, credit$Limit)
lm(Rating, Limit, data =credit)
?lm
lm(Rating ~ Limit, data =credit)
install.packages("FactoMineR")
library(FactoMineR)
install.packages("FactoMineR")
